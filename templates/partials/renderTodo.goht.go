// Code generated by GoHT - DO NOT EDIT.
// https://github.com/stackus/goht

package partials

import "context"
import "io"
import "github.com/stackus/goht"
import (
	"github.com/stackus/goht-todos/domain"
)

// If is a helper function to conditionally return a value
// TODO: replace with goht.If when it's available
func If(condition bool, trueVal, falseVal string) string {
	if condition {
		return trueVal
	}
	return falseVal
}

func RenderTodo(todo domain.Todo) goht.Template {
	return goht.TemplateFunc(func(ctx context.Context, __w io.Writer) (__err error) {
		__buf, __isBuf := __w.(goht.Buffer)
		if !__isBuf {
			__buf = goht.GetBuffer()
			defer goht.ReleaseBuffer(__buf)
		}
		var __children goht.Template
		ctx, __children = goht.PopChildren(ctx)
		_ = __children
		if _, __err = __buf.WriteString("<div class=\"block py-2 border-b-4 border-dotted border-red-900 draggable flex items-center\">\n<span class=\"handle\">\n<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect x=\"10\" y=\"12\" width=\"20\" height=\"3\" fill=\"currentColor\"/>\n<rect x=\"10\" y=\"18.5\" width=\"20\" height=\"3\" fill=\"currentColor\"/>\n<rect x=\"10\" y=\"25\" width=\"20\" height=\"3\" fill=\"currentColor\"/>\n</svg>\n</span>\n<form method=\"POST\" action=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString("/todos/"+todo.ID+"/delete") + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">\n<button class=\"focus:outline focus:outline-red-500 focus:outline-4 mr-2 mt-2\" type=\"submit\" hx-target=\"closest div\" hx-swap=\"outerHTML\" hx-delete=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString("/todos/"+todo.ID) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">‚ùå</button>\n</form>\n<form method=\"GET\" action=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString("/todos/"+todo.ID) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">\n<button class=\"focus:outline focus:outline-red-500 focus:outline-4 mr-2 mt-2\" type=\"submit\" hx-target=\"closest div\" hx-swap=\"outerHTML\" hx-get=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString("/todos/"+todo.ID) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">üìù</button>\n</form>\n"); __err != nil {
			return
		}
		formClasses := map[string]bool{"inline": true, "line-through": todo.Completed}
		if _, __err = __buf.WriteString("<form"); __err != nil {
			return
		}
		var __var1 string
		__var1, __err = goht.BuildClassList("mt-2", formClasses)
		if __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" class=\"" + __var1 + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" method=\"POST\" action=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString("/todos/"+todo.ID+"/edit") + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(" hx-target=\"closest div\" hx-swap=\"outerHTML\">\n<input type=\"hidden\" name=\"completed\" value=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString(goht.FormatString("%t", !todo.Completed)) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("><input type=\"hidden\" name=\"description\" value=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString(todo.Description) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("><noscript>\n<input class=\"mr-2\" type=\"submit\" value=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString(If(todo.Completed, "Set as Not Completed", "Set as Completed")) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("></noscript>\n<span hx-patch=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString("/todos/"+todo.ID) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(">"); __err != nil {
			return
		}
		var __var2 string
		if __var2, __err = goht.CaptureErrors(goht.EscapeString(todo.Description)); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(__var2); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("</span>\n</form>\n<input type=\"hidden\" name=\"id\" value=\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString(goht.EscapeString(todo.ID) + "\""); __err != nil {
			return
		}
		if _, __err = __buf.WriteString("></div>\n"); __err != nil {
			return
		}
		if !__isBuf {
			_, __err = __w.Write(__buf.Bytes())
		}
		return
	})
}
